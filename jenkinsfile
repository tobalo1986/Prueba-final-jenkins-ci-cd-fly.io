pipeline {
    agent {
        docker {
            image 'node:16-alpine'
            args '-u root:root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        NODE_ENV = 'production'
        FLY_API_TOKEN = credentials('fly_api_token')
    }

    triggers {
        githubPush() // Trigger para activar el pipeline en cada push a GitHub
    }

    stages {
        stage('Checkout') {
            steps {
                // Realiza el checkout del repositorio en la rama deploy-jenkins
                git branch: 'deploy-jenkins', url: 'https://github.com/tobalo1986/Prueba-final-jenkins-ci-cd-fly.io.git'
            }
        }

        stage('Instalar dependencias') {
            steps {
                // Instala las dependencias de la aplicación
                sh 'npm install'
            }
        }

        stage('Ejecutar Tests') {
            steps {
                // Ejecuta los tests de la aplicación
                sh 'npm test'
            }
        }

        stage('Construir imagen Docker') {
            steps {
                // Construye la imagen Docker si los tests son exitosos
                sh '''
                    # Instalar Docker CLI
                    apk add --no-cache docker-cli

                    # Construir la imagen Docker
                    docker build -t flyio-app .
                '''
            }
        }

        stage('Desplegar en Fly.io') {
            steps {
                // Despliega la aplicación en Fly.io tras la construcción
                sh '''
                    # Instalar curl
                    apk add --no-cache curl

                    # Instalar Flyctl
                    curl -L https://fly.io/install.sh | sh

                    # Agregar Flyctl al PATH
                    export PATH=$HOME/.fly/bin:$PATH

                    # Autenticar con Fly.io
                    flyctl auth token $FLY_API_TOKEN

                    # Desplegar la aplicación
                    flyctl deploy --config fly.toml --remote-only
                '''
            }
        }
    }

    post {
        success {
            echo '¡Despliegue exitoso!'
        }
        failure {
            echo 'Hubo un fallo en el pipeline.'
        }
    }
}
